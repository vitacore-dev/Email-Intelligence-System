#!/bin/bash

# Docker Management Script for Email Search Backend
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./docker-manage.sh [command]

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PATH –¥–ª—è Docker
export PATH="/Applications/Docker.app/Contents/Resources/bin:$PATH"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        echo -e "${RED}‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Docker Desktop —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω.${NC}"
        exit 1
    fi
    
    if ! docker info &> /dev/null; then
        echo -e "${RED}‚ùå Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop.${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    echo -e "${BLUE}üìä –°–¢–ê–¢–£–° –ö–û–ù–¢–ï–ô–ù–ï–†–ê${NC}"
    echo "=================================="
    
    if docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep -q "email-search-backend"; then
        echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω${NC}"
        docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep "email-search-backend"
        
        echo -e "\n${BLUE}üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥—Ä–µ—Å–∞:${NC}"
        echo "üìß –û—Å–Ω–æ–≤–Ω–æ–π API: http://localhost:5003"
        echo "üîß Backup API: http://localhost:5001"
        echo "üì± Web –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:5003/"
        echo "‚ù§Ô∏è Health check: http://localhost:5003/api/email/health"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º health check
        echo -e "\n${BLUE}‚ù§Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è:${NC}"
        if curl -s "http://localhost:5003/api/email/health" | grep -q "healthy"; then
            echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å –∑–¥–æ—Ä–æ–≤${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–∏—Å–æ–º${NC}"
        fi
    else
        echo -e "${RED}‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞
build_image() {
    echo -e "${BLUE}üî® –°–ë–û–†–ö–ê –û–ë–†–ê–ó–ê${NC}"
    echo "=================================="
    
    echo "–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ email-search-backend:v3.0-enhanced..."
    if docker build -t email-search-backend:v3.0-enhanced .; then
        echo -e "${GREEN}‚úÖ –û–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
start_container() {
    echo -e "${BLUE}üöÄ –ó–ê–ü–£–°–ö –ö–û–ù–¢–ï–ô–ù–ï–†–ê${NC}"
    echo "=================================="
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    if docker ps -q --filter "name=email-search-backend" | grep -q .; then
        echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
        docker stop email-search-backend
        docker rm email-search-backend
    fi
    
    echo "–ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    if docker compose up -d; then
        echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω${NC}"
        
        # –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        echo "–û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–∞..."
        sleep 10
        
        show_status
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
stop_container() {
    echo -e "${BLUE}üõë –û–°–¢–ê–ù–û–í–ö–ê –ö–û–ù–¢–ï–ô–ù–ï–†–ê${NC}"
    echo "=================================="
    
    if docker compose down; then
        echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
restart_container() {
    echo -e "${BLUE}üîÑ –ü–ï–†–ï–ó–ê–ü–£–°–ö –ö–û–ù–¢–ï–ô–ù–ï–†–ê${NC}"
    echo "=================================="
    
    stop_container
    start_container
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
show_logs() {
    echo -e "${BLUE}üìã –õ–û–ì–ò –ö–û–ù–¢–ï–ô–ù–ï–†–ê${NC}"
    echo "=================================="
    
    if docker ps -q --filter "name=email-search-backend" | grep -q .; then
        docker logs -f email-search-backend
    else
        echo -e "${RED}‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
test_container() {
    echo -e "${BLUE}üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–¢–ï–ô–ù–ï–†–ê${NC}"
    echo "=================================="
    
    if ! docker ps -q --filter "name=email-search-backend" | grep -q .; then
        echo -e "${RED}‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
        exit 1
    fi
    
    echo "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ health check..."
    if curl -s "http://localhost:5003/api/email/health" | grep -q "healthy"; then
        echo -e "${GREEN}‚úÖ Health check –ø—Ä–æ—à–µ–ª${NC}"
    else
        echo -e "${RED}‚ùå Health check –Ω–µ –ø—Ä–æ—à–µ–ª${NC}"
        return 1
    fi
    
    echo "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞..."
    if curl -s "http://localhost:5003/" | grep -q "Email Search Backend"; then
        echo -e "${GREEN}‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º${NC}"
    fi
    
    echo "3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å –¥–µ–º–æ –¥–∞–Ω–Ω—ã–º–∏..."
    test_response=$(curl -s -X POST "http://localhost:5003/api/email/search" \
        -H "Content-Type: application/json" \
        -d '{"email": "ya.kristi89@yandex.ru"}' \
        --max-time 30)
    
    if echo "$test_response" | grep -q "owner_name"; then
        echo -e "${GREEN}‚úÖ API —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ${NC}"
        echo "–ù–∞–π–¥–µ–Ω–Ω–æ–µ –∏–º—è: $(echo "$test_response" | grep -o '"owner_name":"[^"]*"' | cut -d'"' -f4)"
    else
        echo -e "${YELLOW}‚ö†Ô∏è API —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–∞–Ω–Ω—ã–º–∏${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏
reinstall() {
    echo -e "${BLUE}üîÑ –ü–û–õ–ù–ê–Ø –ü–ï–†–ï–£–°–¢–ê–ù–û–í–ö–ê${NC}"
    echo "=================================="
    
    stop_container
    
    echo "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
    docker rmi email-search-backend:v3.0-enhanced 2>/dev/null || true
    docker rmi email-search-backend-email-search-service 2>/dev/null || true
    
    build_image
    start_container
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
show_help() {
    echo -e "${BLUE}üîß –£–ü–†–ê–í–õ–ï–ù–ò–ï EMAIL SEARCH BACKEND DOCKER${NC}"
    echo "=========================================="
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  status      - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    echo "  build       - –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑"
    echo "  start       - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo "  stop        - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo "  restart     - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo "  logs        - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    echo "  test        - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo "  reinstall   - –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞"
    echo "  help        - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 status"
    echo "  $0 start"
    echo "  $0 test"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    check_docker
    
    case "${1:-help}" in
        "status")
            show_status
            ;;
        "build")
            build_image
            ;;
        "start")
            start_container
            ;;
        "stop")
            stop_container
            ;;
        "restart")
            restart_container
            ;;
        "logs")
            show_logs
            ;;
        "test")
            test_container
            ;;
        "reinstall")
            reinstall
            ;;
        "help"|*)
            show_help
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"

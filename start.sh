#!/bin/bash

# Email Search Service v2.0 - Quick Start Script
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –±—ã—Å—Ç—Ä–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å

set -e

echo "üöÄ Email Search Service v2.0 - Quick Start"
echo "=========================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v python3 &> /dev/null; then
        echo "‚ùå Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+"
        exit 1
    fi
    
    if ! command -v pip3 &> /dev/null; then
        echo "‚ùå pip3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pip"
        exit 1
    fi
    
    echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ backend
setup_backend() {
    echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ backend..."
    
    cd email-search-backend
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [ ! -d "venv" ]; then
        echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        python3 -m venv venv
    fi
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    source venv/bin/activate
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    pip install -r requirements.txt
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if [ ! -f ".env" ]; then
        echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
        cp .env.example .env
        echo "üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–µ–π"
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p data/logs
    chmod 755 data/
    
    cd ..
    echo "‚úÖ Backend –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ frontend (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
setup_frontend() {
    echo "üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend..."
    
    if [ ! -d "email-search-backend/src/static" ] || [ -z "$(ls -A email-search-backend/src/static)" ]; then
        echo "üîß Frontend –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º Node.js..."
        
        if command -v npm &> /dev/null; then
            echo "üì¶ –°–±–æ—Ä–∫–∞ frontend..."
            cd email-search-frontend
            npm install
            npm run build
            cp -r dist/* ../email-search-backend/src/static/
            cd ..
            echo "‚úÖ Frontend —Å–æ–±—Ä–∞–Ω"
        else
            echo "‚ö†Ô∏è Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω. Frontend —É–∂–µ —Å–æ–±—Ä–∞–Ω –∏ –≤–∫–ª—é—á–µ–Ω –≤ –ø–∞–∫–µ—Ç."
        fi
    else
        echo "‚úÖ Frontend —É–∂–µ –≥–æ—Ç–æ–≤"
    fi
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
start_service() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞..."
    
    cd email-search-backend
    source venv/bin/activate
    
    echo "üåê –°–µ—Ä–≤–∏—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5000"
    echo "üìä API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:5000/api/email/health"
    echo "üîç –î–µ–º–æ: http://localhost:5000/api/email/demo"
    echo ""
    echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
    echo ""
    
    python src/main.py
}

# Docker –≤–∞—Ä–∏–∞–Ω—Ç
start_with_docker() {
    echo "üê≥ –ó–∞–ø—É—Å–∫ —Å Docker..."
    
    cd email-search-backend
    
    if [ ! -f ".env" ]; then
        cp .env.example .env
        echo "üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."
    fi
    
    if command -v docker-compose &> /dev/null; then
        docker-compose up -d
        echo "‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω —Å Docker Compose"
        echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5000"
    elif command -v docker &> /dev/null; then
        docker build -t email-search-service:v2.0 .
        docker run -d --name email-search-service -p 5000:5000 -v $(pwd)/data:/app/data email-search-service:v2.0
        echo "‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω —Å Docker"
        echo "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5000"
    else
        echo "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫."
        return 1
    fi
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    echo ""
    echo "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞:"
    echo "1) üê≥ Docker (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
    echo "2) üîß –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞"
    echo "3) ‚ùì –ü–æ–º–æ—â—å"
    echo "4) üö™ –í—ã—Ö–æ–¥"
    echo ""
    read -p "–í–∞—à –≤—ã–±–æ—Ä (1-4): " choice
    
    case $choice in
        1)
            if start_with_docker; then
                echo "‚úÖ –°–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω —Å Docker!"
                echo "üìñ –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: docker-compose logs -f"
                echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: docker-compose down"
            else
                echo "‚ö†Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä—É—á–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É..."
                manual_setup
            fi
            ;;
        2)
            manual_setup
            ;;
        3)
            show_help
            main_menu
            ;;
        4)
            echo "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
            exit 0
            ;;
        *)
            echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            main_menu
            ;;
    esac
}

# –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
manual_setup() {
    check_dependencies
    setup_backend
    setup_frontend
    start_service
}

# –ü–æ–º–æ—â—å
show_help() {
    echo ""
    echo "üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ Email Search Service v2.0"
    echo "======================================"
    echo ""
    echo "üê≥ Docker –∑–∞–ø—É—Å–∫:"
    echo "   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
    echo "   - –ò–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ä–µ–¥–∞"
    echo "   - –ü—Ä–æ—Å—Ç–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
    echo ""
    echo "üîß –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞:"
    echo "   - –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å"
    echo "   - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥ –≤–∞—à–∏ –Ω—É–∂–¥—ã"
    echo "   - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    echo ""
    echo "üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:"
    echo "   email-search-backend/  - Backend Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    echo "   email-search-frontend/ - Frontend React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    echo "   docs/                  - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
    echo ""
    echo "üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
    echo "   –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª email-search-backend/.env"
    echo "   –î–æ–±–∞–≤—å—Ç–µ API –∫–ª—é—á–∏ –¥–ª—è Google –∏ Bing (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
    echo ""
    echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
    echo "   README.md              - –û—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
    echo "   docs/                  - –ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞"
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    --docker)
        start_with_docker
        ;;
    --manual)
        manual_setup
        ;;
    --help)
        show_help
        ;;
    *)
        main_menu
        ;;
esac

